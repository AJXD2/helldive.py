{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Helldive.py","text":"<p>A simple Python library for diving deep into the Helldivers Community API and Diveharder API.</p>"},{"location":"#features","title":"\ud83c\udf1f Features","text":"<ul> <li>Easy API Access: Communicate with the Helldivers Community API and Diveharder API without breaking a sweat.</li> <li>Typed Data: Get structured, easily readable data like dispatches, planets, and more!</li> <li>Perfect for Projects: Ideal for projects, bots, or just exploring Helldivers data.</li> </ul>"},{"location":"#links","title":"\ud83d\udd17 Links","text":"<ul> <li>Get Started</li> <li>DiveHarder</li> <li>Community API</li> <li>API discussion Discord</li> </ul>"},{"location":"installation/","title":"\ud83d\ude80 Get Started","text":""},{"location":"installation/#installation","title":"\u2699\ufe0f Installation","text":"PipPoetryUV <pre><code>pip install helldivepy\n</code></pre> Poetry <p>Install poetry here.</p> <pre><code>poetry add helldivepy\n</code></pre> UV <p>Install UV here.</p> <pre><code>uv add helldivepy\n</code></pre> <p>Example code</p> Without RichWith rich <pre><code>from helldivepy import ApiClient\nclient = ApiClient(\n    user_agent=\"Hello-World\",\n    user_contact=\"example@example.com | discord:exampleuser123\",\n)\n\nprint(client.get_war_info().model_dump())\n&gt;&gt;&gt;\n    {\n        'started': datetime.datetime(2024, 1, 23, 20, 5, 13, tzinfo=TzInfo(UTC)),\n        'ended': datetime.datetime(2028, 2, 8, 20, 4, 55, tzinfo=TzInfo(UTC)),\n        'now': datetime.datetime(1970, 11, 6, 14, 59, 50, tzinfo=TzInfo(UTC)),\n        'client_version': '0.3.0',\n        'factions': ['Humans', 'Terminids', 'Automaton', 'Illuminate'],\n        'impact_multiplier': 0.034382936,\n        'statistics': {\n            'missions_won': 370390368,\n            'missions_lost': 37224925,\n            'mission_time': 1047433682627,\n            'terminid_kills': 79906866134,\n            'automaton_kills': 31552895947,\n            'illuminate_kills': 3705435035,\n            'bullets_fired': 571067857117,\n            'bullets_hit': 645369797775,\n            'time_played': 1047433682627,\n            'deaths': 2564546790,\n            'revives': 2,\n            'friendlies': 361359530,\n            'mission_success_rate': 90.0,\n            'accuracy': 100,\n            'player_count': 111316\n        }\n    }\n</code></pre> <pre><code>from helldivepy import ApiClient\nfrom rich import print\n\nclient = ApiClient(\n    user_agent=\"Hello-World\",\n    user_contact=\"example@example.com | discord:exampleuser123\",\n)\n\nprint(client.get_war_info())\n&gt;&gt;&gt; WarInfo(\n    started=datetime.datetime(2024, 1, 23, 20, 5, 13, tzinfo=TzInfo(UTC)),\n    ended=datetime.datetime(2028, 2, 8, 20, 4, 55, tzinfo=TzInfo(UTC)),\n    now=datetime.datetime(1970, 11, 6, 14, 24, 40, tzinfo=TzInfo(UTC)),\n    client_version='0.3.0',\n    factions=['Humans', 'Terminids', 'Automaton', 'Illuminate'],\n    impact_multiplier=0.03595309,\n    statistics=Statistics(\n        missions_won=370353637,\n        missions_lost=37219878,\n        mission_time=1047300170684,\n        terminid_kills=79904593412,\n        automaton_kills=31551843355,\n        illuminate_kills=3687632552,\n        bullets_fired=570972530827,\n        bullets_hit=645273266867,\n        time_played=1047300170684,\n        deaths=2564288334,\n        revives=2,\n        friendlies=361317130,\n        mission_success_rate=90.0,\n        accuracy=100,\n        player_count=102995\n    )\n)\n</code></pre>"},{"location":"links/","title":"\ud83d\udd17 Links","text":"<p>A list of links that may come in handy when using this lib or other parts of the community API.</p> <ul> <li>PyPi project</li> <li>DiveHarder</li> <li>Community API</li> <li>Comuunity Github</li> <li>API discussion Discord</li> </ul>"},{"location":"api/","title":"API Reference","text":""},{"location":"api/#helldivepy","title":"helldivepy","text":""},{"location":"api/#helldivepy-attributes","title":"Attributes","text":""},{"location":"api/#helldivepy.__all__","title":"helldivepy.__all__  <code>module-attribute</code>","text":"<pre><code>__all__ = ['ApiClient']\n</code></pre>"},{"location":"api/#helldivepy-classes","title":"Classes","text":""},{"location":"api/#helldivepy.ApiClient","title":"helldivepy.ApiClient","text":"<pre><code>ApiClient(user_agent: str, user_contact: str, debug: bool = False, diveharder_url: str = OFFICIAL_DIVEHARDER_URL, community_url: str = OFFICIAL_COMMUNITY_URL)\n</code></pre> <p>The client used to interact with the Helldivers 2 APIs</p> <p>The client used to interact with the Helldivers 2 APIs</p> PARAMETER DESCRIPTION <code>user_agent</code> <p>The user agent to use when making requests.</p> <p> TYPE: <code>str</code> </p> <code>user_contact</code> <p>The user contact to use when making requests.</p> <p> TYPE: <code>str</code> </p> <code>debug</code> <p>Enables debug logging for development.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> <code>diveharder_url</code> <p>The diveharder API url to use. Defaults to <code>constants.OFFICIAL_DIVEHARDER_URL</code>.</p> <p> TYPE: <code>str</code> DEFAULT: <code>OFFICIAL_DIVEHARDER_URL</code> </p> <code>community_url</code> <p>The community API url to use. Defaults to <code>constants.OFFICIAL_COMMUNITY_URL</code>.</p> <p> TYPE: <code>str</code> DEFAULT: <code>OFFICIAL_COMMUNITY_URL</code> </p>"},{"location":"api/#helldivepy.ApiClient-attributes","title":"Attributes","text":""},{"location":"api/#helldivepy.ApiClient.debug","title":"helldivepy.ApiClient.debug  <code>instance-attribute</code>","text":"<pre><code>debug = debug\n</code></pre>"},{"location":"api/#helldivepy.ApiClient.logger","title":"helldivepy.ApiClient.logger  <code>instance-attribute</code>","text":"<pre><code>logger = set_logger(debug)\n</code></pre>"},{"location":"api/#helldivepy.ApiClient.api_config","title":"helldivepy.ApiClient.api_config  <code>instance-attribute</code>","text":"<pre><code>api_config = APIURLConfiguration(diveharder=diveharder_url, community=community_url)\n</code></pre>"},{"location":"api/#helldivepy.ApiClient.war","title":"helldivepy.ApiClient.war  <code>property</code>","text":"<pre><code>war: WarModule\n</code></pre>"},{"location":"api/#helldivepy.ApiClient.dispatch","title":"helldivepy.ApiClient.dispatch  <code>property</code>","text":"<pre><code>dispatch: DispatchModule\n</code></pre>"},{"location":"api/#helldivepy.ApiClient.steam","title":"helldivepy.ApiClient.steam  <code>property</code>","text":"<pre><code>steam: SteamModule\n</code></pre>"},{"location":"api/#helldivepy.ApiClient.assignments","title":"helldivepy.ApiClient.assignments  <code>property</code>","text":"<pre><code>assignments: AssignmentsModule\n</code></pre>"},{"location":"api/#helldivepy.ApiClient.major_orders","title":"helldivepy.ApiClient.major_orders  <code>property</code>","text":"<pre><code>major_orders: AssignmentsModule\n</code></pre>"},{"location":"api/#helldivepy.ApiClient.planets","title":"helldivepy.ApiClient.planets  <code>property</code>","text":"<pre><code>planets: PlanetsModule\n</code></pre>"},{"location":"api/#helldivepy.ApiClient.campaigns","title":"helldivepy.ApiClient.campaigns  <code>property</code>","text":"<pre><code>campaigns: CampaignModule\n</code></pre>"},{"location":"api/#helldivepy.ApiClient.space_stations","title":"helldivepy.ApiClient.space_stations  <code>property</code>","text":"<pre><code>space_stations: SpaceStationModule\n</code></pre>"},{"location":"api/#helldivepy.ApiClient-functions","title":"Functions","text":""},{"location":"api/#helldivepy.ApiClient.get_client","title":"helldivepy.ApiClient.get_client  <code>classmethod</code>","text":"<pre><code>get_client()\n</code></pre>"},{"location":"api/#helldivepy.ApiClient.get_war_info","title":"helldivepy.ApiClient.get_war_info","text":"<pre><code>get_war_info() -&gt; models.WarInfo\n</code></pre>"},{"location":"api/constants/","title":"Constants","text":""},{"location":"api/constants/#helldivepy.constants","title":"helldivepy.constants","text":""},{"location":"api/constants/#helldivepy.constants-attributes","title":"Attributes","text":""},{"location":"api/constants/#helldivepy.constants.OFFICIAL_DIVEHARDER_URL","title":"helldivepy.constants.OFFICIAL_DIVEHARDER_URL  <code>module-attribute</code>","text":"<pre><code>OFFICIAL_DIVEHARDER_URL = 'https://api.diveharder.com'\n</code></pre>"},{"location":"api/constants/#helldivepy.constants.OFFICIAL_COMMUNITY_URL","title":"helldivepy.constants.OFFICIAL_COMMUNITY_URL  <code>module-attribute</code>","text":"<pre><code>OFFICIAL_COMMUNITY_URL = 'https://api.helldivers2.dev'\n</code></pre>"},{"location":"api/constants/#helldivepy.constants.FACTIONS","title":"helldivepy.constants.FACTIONS  <code>module-attribute</code>","text":"<pre><code>FACTIONS = {1: 'Humans', 2: 'Terminids', 3: 'Automaton', 4: 'Illuminate'}\n</code></pre>"},{"location":"api/enums/","title":"Enums","text":""},{"location":"api/enums/#helldivepy.enums","title":"helldivepy.enums","text":""},{"location":"api/enums/#helldivepy.enums-attributes","title":"Attributes","text":""},{"location":"api/enums/#helldivepy.enums.FactionType","title":"helldivepy.enums.FactionType  <code>module-attribute</code>","text":"<pre><code>FactionType = Literal['Humans', 'Terminids', 'Automaton', 'Illuminate']\n</code></pre>"},{"location":"api/enums/#helldivepy.enums-classes","title":"Classes","text":""},{"location":"api/enums/#helldivepy.enums.BetterEnum","title":"helldivepy.enums.BetterEnum","text":"<p>               Bases: <code>Enum</code></p>"},{"location":"api/enums/#helldivepy.enums.BetterEnum-functions","title":"Functions","text":""},{"location":"api/enums/#helldivepy.enums.BetterEnum.parse","title":"helldivepy.enums.BetterEnum.parse  <code>classmethod</code>","text":"<pre><code>parse(value)\n</code></pre>"},{"location":"api/enums/#helldivepy.enums.CampaignTypes","title":"helldivepy.enums.CampaignTypes","text":"<p>               Bases: <code>BetterEnum</code></p> <p>Types of campaigns in the game</p>"},{"location":"api/enums/#helldivepy.enums.CampaignTypes-attributes","title":"Attributes","text":""},{"location":"api/enums/#helldivepy.enums.CampaignTypes.LIBERATION_DEFENSE","title":"helldivepy.enums.CampaignTypes.LIBERATION_DEFENSE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LIBERATION_DEFENSE = 0\n</code></pre>"},{"location":"api/enums/#helldivepy.enums.CampaignTypes.RECON","title":"helldivepy.enums.CampaignTypes.RECON  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>RECON = 1\n</code></pre>"},{"location":"api/enums/#helldivepy.enums.CampaignTypes.STORY","title":"helldivepy.enums.CampaignTypes.STORY  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>STORY = 2\n</code></pre>"},{"location":"api/enums/#helldivepy.enums.ValueTypes","title":"helldivepy.enums.ValueTypes","text":"<p>               Bases: <code>BetterEnum</code></p> <p>Types of values returned from the major order/assignments endpoint.</p>"},{"location":"api/enums/#helldivepy.enums.ValueTypes-attributes","title":"Attributes","text":""},{"location":"api/enums/#helldivepy.enums.ValueTypes.RACE","title":"helldivepy.enums.ValueTypes.RACE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>RACE = 1\n</code></pre>"},{"location":"api/enums/#helldivepy.enums.ValueTypes.UNKNOWN","title":"helldivepy.enums.ValueTypes.UNKNOWN  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>UNKNOWN = 2\n</code></pre>"},{"location":"api/enums/#helldivepy.enums.ValueTypes.TARGET_COUNT","title":"helldivepy.enums.ValueTypes.TARGET_COUNT  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>TARGET_COUNT = 3\n</code></pre>"},{"location":"api/enums/#helldivepy.enums.ValueTypes.UNIT_ID","title":"helldivepy.enums.ValueTypes.UNIT_ID  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>UNIT_ID = 4\n</code></pre>"},{"location":"api/enums/#helldivepy.enums.ValueTypes.ITEM_ID","title":"helldivepy.enums.ValueTypes.ITEM_ID  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ITEM_ID = 5\n</code></pre>"},{"location":"api/enums/#helldivepy.enums.ValueTypes.LIBERATE","title":"helldivepy.enums.ValueTypes.LIBERATE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LIBERATE = 11\n</code></pre>"},{"location":"api/enums/#helldivepy.enums.ValueTypes.PLANET","title":"helldivepy.enums.ValueTypes.PLANET  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PLANET = 12\n</code></pre>"},{"location":"api/enums/#helldivepy.enums.RewardTypes","title":"helldivepy.enums.RewardTypes","text":"<p>               Bases: <code>BetterEnum</code></p> <p>Types of rewards given out by the major order/assignments.</p>"},{"location":"api/enums/#helldivepy.enums.RewardTypes-attributes","title":"Attributes","text":""},{"location":"api/enums/#helldivepy.enums.RewardTypes.MEDALS","title":"helldivepy.enums.RewardTypes.MEDALS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MEDALS = 1\n</code></pre>"},{"location":"api/enums/#helldivepy.enums.AssignmentTypes","title":"helldivepy.enums.AssignmentTypes","text":"<p>               Bases: <code>BetterEnum</code></p> <p>Types of assignments.</p>"},{"location":"api/enums/#helldivepy.enums.AssignmentTypes-attributes","title":"Attributes","text":""},{"location":"api/enums/#helldivepy.enums.AssignmentTypes.ERADICATE","title":"helldivepy.enums.AssignmentTypes.ERADICATE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ERADICATE = 3\n</code></pre>"},{"location":"api/enums/#helldivepy.enums.AssignmentTypes.LIBERATION","title":"helldivepy.enums.AssignmentTypes.LIBERATION  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LIBERATION = 11\n</code></pre>"},{"location":"api/enums/#helldivepy.enums.AssignmentTypes.DEFENSE","title":"helldivepy.enums.AssignmentTypes.DEFENSE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DEFENSE = 12\n</code></pre>"},{"location":"api/enums/#helldivepy.enums.AssignmentTypes.CONTROL","title":"helldivepy.enums.AssignmentTypes.CONTROL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CONTROL = 13\n</code></pre>"},{"location":"api/models/","title":"Models","text":""},{"location":"api/models/#helldivepy.models","title":"helldivepy.models","text":""},{"location":"api/models/#helldivepy.models-classes","title":"Classes","text":""},{"location":"api/models/#helldivepy.models.APIURLConfiguration","title":"helldivepy.models.APIURLConfiguration","text":"<p>               Bases: <code>BaseModel</code></p> <p>Configuration for API endpoints.</p> <p>Contains URLs for different API services used by the application.</p> ATTRIBUTE DESCRIPTION <code>diveharder</code> <p>Base URL for the Diveharder API endpoint.</p> <p> TYPE: <code>str</code> </p> <code>community</code> <p>Base URL for the Community API endpoint.</p> <p> TYPE: <code>str</code> </p>"},{"location":"api/models/#helldivepy.models.APIURLConfiguration-attributes","title":"Attributes","text":""},{"location":"api/models/#helldivepy.models.APIURLConfiguration.diveharder","title":"helldivepy.models.APIURLConfiguration.diveharder  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>diveharder: str = OFFICIAL_DIVEHARDER_URL\n</code></pre>"},{"location":"api/models/#helldivepy.models.APIURLConfiguration.community","title":"helldivepy.models.APIURLConfiguration.community  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>community: str = OFFICIAL_COMMUNITY_URL\n</code></pre>"},{"location":"api/models/#helldivepy.models.Statistics","title":"helldivepy.models.Statistics","text":"<p>               Bases: <code>BaseModel</code></p> <p>War statistics tracking various gameplay metrics.</p> <p>Tracks mission outcomes, combat statistics, and player performance metrics for the current war campaign.</p> ATTRIBUTE DESCRIPTION <code>missions_won</code> <p>Number of successfully completed missions.</p> <p> TYPE: <code>int</code> </p> <code>missions_lost</code> <p>Number of failed missions.</p> <p> TYPE: <code>int</code> </p> <code>mission_time</code> <p>Total time spent in missions (seconds).</p> <p> TYPE: <code>int</code> </p> <code>terminid_kills</code> <p>Number of Terminid enemies eliminated.</p> <p> TYPE: <code>int</code> </p> <code>automaton_kills</code> <p>Number of Automaton enemies eliminated.</p> <p> TYPE: <code>int</code> </p> <code>illuminate_kills</code> <p>Number of Illuminate enemies eliminated.</p> <p> TYPE: <code>int</code> </p> <code>bullets_fired</code> <p>Total ammunition expended.</p> <p> TYPE: <code>int</code> </p> <code>bullets_hit</code> <p>Total successful hits on targets.</p> <p> TYPE: <code>int</code> </p> <code>time_played</code> <p>Total gameplay duration (seconds).</p> <p> TYPE: <code>int</code> </p> <code>deaths</code> <p>Total player deaths.</p> <p> TYPE: <code>int</code> </p> <code>revives</code> <p>Total teammate revivals performed.</p> <p> TYPE: <code>int</code> </p> <code>friendlies</code> <p>Total friendly fire incidents.</p> <p> TYPE: <code>int</code> </p> <code>mission_success_rate</code> <p>Percentage of successful missions.</p> <p> TYPE: <code>float</code> </p> <code>accuracy</code> <p>Overall shooting accuracy percentage.</p> <p> TYPE: <code>int</code> </p> <code>player_count</code> <p>Current number of active players.</p> <p> TYPE: <code>int</code> </p>"},{"location":"api/models/#helldivepy.models.Statistics-attributes","title":"Attributes","text":""},{"location":"api/models/#helldivepy.models.Statistics.missions_won","title":"helldivepy.models.Statistics.missions_won  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>missions_won: int = Field(alias='missionsWon')\n</code></pre>"},{"location":"api/models/#helldivepy.models.Statistics.missions_lost","title":"helldivepy.models.Statistics.missions_lost  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>missions_lost: int = Field(alias='missionsLost')\n</code></pre>"},{"location":"api/models/#helldivepy.models.Statistics.mission_time","title":"helldivepy.models.Statistics.mission_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mission_time: int = Field(alias='missionTime')\n</code></pre>"},{"location":"api/models/#helldivepy.models.Statistics.terminid_kills","title":"helldivepy.models.Statistics.terminid_kills  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>terminid_kills: int = Field(alias='terminidKills')\n</code></pre>"},{"location":"api/models/#helldivepy.models.Statistics.automaton_kills","title":"helldivepy.models.Statistics.automaton_kills  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>automaton_kills: int = Field(alias='automatonKills')\n</code></pre>"},{"location":"api/models/#helldivepy.models.Statistics.illuminate_kills","title":"helldivepy.models.Statistics.illuminate_kills  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>illuminate_kills: int = Field(alias='illuminateKills')\n</code></pre>"},{"location":"api/models/#helldivepy.models.Statistics.bullets_fired","title":"helldivepy.models.Statistics.bullets_fired  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bullets_fired: int = Field(alias='bulletsFired')\n</code></pre>"},{"location":"api/models/#helldivepy.models.Statistics.bullets_hit","title":"helldivepy.models.Statistics.bullets_hit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bullets_hit: int = Field(alias='bulletsHit')\n</code></pre>"},{"location":"api/models/#helldivepy.models.Statistics.time_played","title":"helldivepy.models.Statistics.time_played  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_played: int = Field(alias='timePlayed')\n</code></pre>"},{"location":"api/models/#helldivepy.models.Statistics.deaths","title":"helldivepy.models.Statistics.deaths  <code>instance-attribute</code>","text":"<pre><code>deaths: int\n</code></pre>"},{"location":"api/models/#helldivepy.models.Statistics.revives","title":"helldivepy.models.Statistics.revives  <code>instance-attribute</code>","text":"<pre><code>revives: int\n</code></pre>"},{"location":"api/models/#helldivepy.models.Statistics.friendlies","title":"helldivepy.models.Statistics.friendlies  <code>instance-attribute</code>","text":"<pre><code>friendlies: int\n</code></pre>"},{"location":"api/models/#helldivepy.models.Statistics.mission_success_rate","title":"helldivepy.models.Statistics.mission_success_rate  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mission_success_rate: float = Field(alias='missionSuccessRate')\n</code></pre>"},{"location":"api/models/#helldivepy.models.Statistics.accuracy","title":"helldivepy.models.Statistics.accuracy  <code>instance-attribute</code>","text":"<pre><code>accuracy: int\n</code></pre>"},{"location":"api/models/#helldivepy.models.Statistics.player_count","title":"helldivepy.models.Statistics.player_count  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>player_count: int = Field(alias='playerCount')\n</code></pre>"},{"location":"api/models/#helldivepy.models.WarInfo","title":"helldivepy.models.WarInfo","text":"<p>               Bases: <code>BaseModel</code></p> <p>Information about the current galactic war.</p> <p>Contains timing information, client details, and overall war statistics.</p> ATTRIBUTE DESCRIPTION <code>started</code> <p>War start timestamp.</p> <p> TYPE: <code>datetime</code> </p> <code>ended</code> <p>War end timestamp.</p> <p> TYPE: <code>datetime</code> </p> <code>now</code> <p>Current war time.</p> <p> TYPE: <code>datetime</code> </p> <code>client_version</code> <p>Game client version.</p> <p> TYPE: <code>str</code> </p> <code>factions</code> <p>List of participating factions.</p> <p> TYPE: <code>list[str]</code> </p> <code>impact_multiplier</code> <p>Current war impact multiplier.</p> <p> TYPE: <code>float</code> </p> <code>statistics</code> <p>Comprehensive war statistics.</p> <p> TYPE: <code>Statistics</code> </p>"},{"location":"api/models/#helldivepy.models.WarInfo-attributes","title":"Attributes","text":""},{"location":"api/models/#helldivepy.models.WarInfo.started","title":"helldivepy.models.WarInfo.started  <code>instance-attribute</code>","text":"<pre><code>started: datetime\n</code></pre>"},{"location":"api/models/#helldivepy.models.WarInfo.ended","title":"helldivepy.models.WarInfo.ended  <code>instance-attribute</code>","text":"<pre><code>ended: datetime\n</code></pre>"},{"location":"api/models/#helldivepy.models.WarInfo.now","title":"helldivepy.models.WarInfo.now  <code>instance-attribute</code>","text":"<pre><code>now: datetime\n</code></pre>"},{"location":"api/models/#helldivepy.models.WarInfo.client_version","title":"helldivepy.models.WarInfo.client_version  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>client_version: str = Field(alias='clientVersion')\n</code></pre>"},{"location":"api/models/#helldivepy.models.WarInfo.factions","title":"helldivepy.models.WarInfo.factions  <code>instance-attribute</code>","text":"<pre><code>factions: list[Literal['Humans', 'Terminids', 'Automaton', 'Illuminate']]\n</code></pre>"},{"location":"api/models/#helldivepy.models.WarInfo.impact_multiplier","title":"helldivepy.models.WarInfo.impact_multiplier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>impact_multiplier: float = Field(alias='impactMultiplier')\n</code></pre>"},{"location":"api/models/#helldivepy.models.WarInfo.statistics","title":"helldivepy.models.WarInfo.statistics  <code>instance-attribute</code>","text":"<pre><code>statistics: Statistics\n</code></pre>"},{"location":"api/models/#helldivepy.models.Dispatch","title":"helldivepy.models.Dispatch","text":"<p>               Bases: <code>BaseModel</code></p> <p>War dispatch message container.</p> <p>Represents official communications during the war campaign.</p> ATTRIBUTE DESCRIPTION <code>id</code> <p>Unique dispatch identifier.</p> <p> TYPE: <code>int</code> </p> <code>published</code> <p>Dispatch publication timestamp.</p> <p> TYPE: <code>datetime</code> </p> <code>type</code> <p>Message type identifier.</p> <p> TYPE: <code>Literal[0]</code> </p> <code>message</code> <p>Dispatch content.</p> <p> TYPE: <code>str</code> </p>"},{"location":"api/models/#helldivepy.models.Dispatch-attributes","title":"Attributes","text":""},{"location":"api/models/#helldivepy.models.Dispatch.id","title":"helldivepy.models.Dispatch.id  <code>instance-attribute</code>","text":"<pre><code>id: int\n</code></pre>"},{"location":"api/models/#helldivepy.models.Dispatch.published","title":"helldivepy.models.Dispatch.published  <code>instance-attribute</code>","text":"<pre><code>published: datetime\n</code></pre>"},{"location":"api/models/#helldivepy.models.Dispatch.type","title":"helldivepy.models.Dispatch.type  <code>instance-attribute</code>","text":"<pre><code>type: Literal[0]\n</code></pre>"},{"location":"api/models/#helldivepy.models.Dispatch.message","title":"helldivepy.models.Dispatch.message  <code>instance-attribute</code>","text":"<pre><code>message: str\n</code></pre>"},{"location":"api/models/#helldivepy.models.SteamNews","title":"helldivepy.models.SteamNews","text":"<p>               Bases: <code>BaseModel</code></p> <p>Steam platform update information.</p> <p>Contains details about game patches and updates published on Steam.</p> ATTRIBUTE DESCRIPTION <code>id</code> <p>Unique news article identifier.</p> <p> TYPE: <code>str</code> </p> <code>title</code> <p>Update title.</p> <p> TYPE: <code>str</code> </p> <code>url</code> <p>Full update documentation URL.</p> <p> TYPE: <code>str</code> </p> <code>author</code> <p>Update author.</p> <p> TYPE: <code>str</code> </p> <code>content</code> <p>Update content.</p> <p> TYPE: <code>str</code> </p> <code>published_at</code> <p>Publication timestamp.</p> <p> TYPE: <code>datetime</code> </p>"},{"location":"api/models/#helldivepy.models.SteamNews-attributes","title":"Attributes","text":""},{"location":"api/models/#helldivepy.models.SteamNews.id","title":"helldivepy.models.SteamNews.id  <code>instance-attribute</code>","text":"<pre><code>id: str\n</code></pre>"},{"location":"api/models/#helldivepy.models.SteamNews.title","title":"helldivepy.models.SteamNews.title  <code>instance-attribute</code>","text":"<pre><code>title: str\n</code></pre>"},{"location":"api/models/#helldivepy.models.SteamNews.url","title":"helldivepy.models.SteamNews.url  <code>instance-attribute</code>","text":"<pre><code>url: str\n</code></pre>"},{"location":"api/models/#helldivepy.models.SteamNews.author","title":"helldivepy.models.SteamNews.author  <code>instance-attribute</code>","text":"<pre><code>author: str\n</code></pre>"},{"location":"api/models/#helldivepy.models.SteamNews.content","title":"helldivepy.models.SteamNews.content  <code>instance-attribute</code>","text":"<pre><code>content: str\n</code></pre>"},{"location":"api/models/#helldivepy.models.SteamNews.published_at","title":"helldivepy.models.SteamNews.published_at  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>published_at: datetime = Field(alias='publishedAt')\n</code></pre>"},{"location":"api/models/#helldivepy.models.PlanetEvent","title":"helldivepy.models.PlanetEvent","text":"<p>               Bases: <code>BaseModel</code></p> <p>Planetary event information.</p> <p>Tracks events affecting individual planets during the war.</p> ATTRIBUTE DESCRIPTION <code>id</code> <p>Unique event identifier.</p> <p> TYPE: <code>int</code> </p> <code>event_type</code> <p>Type of planetary event.</p> <p> TYPE: <code>int</code> </p> <code>faction</code> <p>Associated faction.</p> <p> TYPE: <code>FactionType</code> </p> <code>health</code> <p>Current planet health.</p> <p> TYPE: <code>int</code> </p> <code>max_health</code> <p>Maximum planet health.</p> <p> TYPE: <code>int</code> </p> <code>start_time</code> <p>Event start timestamp.</p> <p> TYPE: <code>datetime</code> </p> <code>end_time</code> <p>Event end timestamp.</p> <p> TYPE: <code>datetime</code> </p> <code>campaign_id</code> <p>Associated campaign identifier.</p> <p> TYPE: <code>int</code> </p> <code>joint_operation_ids</code> <p>Related joint operation identifiers.</p> <p> TYPE: <code>list[int]</code> </p>"},{"location":"api/models/#helldivepy.models.PlanetEvent-attributes","title":"Attributes","text":""},{"location":"api/models/#helldivepy.models.PlanetEvent.id","title":"helldivepy.models.PlanetEvent.id  <code>instance-attribute</code>","text":"<pre><code>id: int\n</code></pre>"},{"location":"api/models/#helldivepy.models.PlanetEvent.event_type","title":"helldivepy.models.PlanetEvent.event_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>event_type: int = Field(alias='eventType')\n</code></pre>"},{"location":"api/models/#helldivepy.models.PlanetEvent.faction","title":"helldivepy.models.PlanetEvent.faction  <code>instance-attribute</code>","text":"<pre><code>faction: FactionType\n</code></pre>"},{"location":"api/models/#helldivepy.models.PlanetEvent.health","title":"helldivepy.models.PlanetEvent.health  <code>instance-attribute</code>","text":"<pre><code>health: int\n</code></pre>"},{"location":"api/models/#helldivepy.models.PlanetEvent.max_health","title":"helldivepy.models.PlanetEvent.max_health  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>max_health: int = Field(alias='maxHealth')\n</code></pre>"},{"location":"api/models/#helldivepy.models.PlanetEvent.start_time","title":"helldivepy.models.PlanetEvent.start_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>start_time: datetime = Field(alias='startTime')\n</code></pre>"},{"location":"api/models/#helldivepy.models.PlanetEvent.end_time","title":"helldivepy.models.PlanetEvent.end_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>end_time: datetime = Field(alias='endTime')\n</code></pre>"},{"location":"api/models/#helldivepy.models.PlanetEvent.campaign_id","title":"helldivepy.models.PlanetEvent.campaign_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>campaign_id: int = Field(alias='campaignId')\n</code></pre>"},{"location":"api/models/#helldivepy.models.PlanetEvent.joint_operation_ids","title":"helldivepy.models.PlanetEvent.joint_operation_ids  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>joint_operation_ids: list[int] = Field(alias='jointOperationIds')\n</code></pre>"},{"location":"api/models/#helldivepy.models.PlanetEvent.planet","title":"helldivepy.models.PlanetEvent.planet  <code>property</code>","text":"<pre><code>planet: Planet | None\n</code></pre> <p>Retrieves the planet associated with this event.</p> RETURNS DESCRIPTION <code>Planet | None</code> <p>Planet | None: Associated planet object if available, None otherwise.</p>"},{"location":"api/models/#helldivepy.models.Position","title":"helldivepy.models.Position","text":"<p>               Bases: <code>BaseModel</code></p> <p>2D coordinate position.</p> <p>Represents a location in 2D space.</p> ATTRIBUTE DESCRIPTION <code>x</code> <p>Horizontal coordinate.</p> <p> TYPE: <code>float</code> </p> <code>y</code> <p>Vertical coordinate.</p> <p> TYPE: <code>float</code> </p>"},{"location":"api/models/#helldivepy.models.Position-attributes","title":"Attributes","text":""},{"location":"api/models/#helldivepy.models.Position.x","title":"helldivepy.models.Position.x  <code>instance-attribute</code>","text":"<pre><code>x: float\n</code></pre>"},{"location":"api/models/#helldivepy.models.Position.y","title":"helldivepy.models.Position.y  <code>instance-attribute</code>","text":"<pre><code>y: float\n</code></pre>"},{"location":"api/models/#helldivepy.models.PlanetaryHazard","title":"helldivepy.models.PlanetaryHazard","text":"<p>               Bases: <code>BaseModel</code></p> <p>Planetary environmental hazard.</p> <p>Describes environmental dangers present on a planet.</p> ATTRIBUTE DESCRIPTION <code>name</code> <p>Hazard identifier.</p> <p> TYPE: <code>str</code> </p> <code>description</code> <p>Detailed hazard description.</p> <p> TYPE: <code>str</code> </p>"},{"location":"api/models/#helldivepy.models.PlanetaryHazard-attributes","title":"Attributes","text":""},{"location":"api/models/#helldivepy.models.PlanetaryHazard.name","title":"helldivepy.models.PlanetaryHazard.name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"api/models/#helldivepy.models.PlanetaryHazard.description","title":"helldivepy.models.PlanetaryHazard.description  <code>instance-attribute</code>","text":"<pre><code>description: str\n</code></pre>"},{"location":"api/models/#helldivepy.models.Biome","title":"helldivepy.models.Biome","text":"<p>               Bases: <code>BaseModel</code></p> <p>Planetary biome characteristics.</p> <p>Describes the environmental characteristics of a planet.</p> ATTRIBUTE DESCRIPTION <code>name</code> <p>Biome identifier.</p> <p> TYPE: <code>str</code> </p> <code>description</code> <p>Detailed biome description.</p> <p> TYPE: <code>str</code> </p>"},{"location":"api/models/#helldivepy.models.Biome-attributes","title":"Attributes","text":""},{"location":"api/models/#helldivepy.models.Biome.name","title":"helldivepy.models.Biome.name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"api/models/#helldivepy.models.Biome.description","title":"helldivepy.models.Biome.description  <code>instance-attribute</code>","text":"<pre><code>description: str\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet","title":"helldivepy.models.Planet","text":"<p>               Bases: <code>BaseModel</code></p> <p>Planetary information and status.</p> <p>Contains comprehensive information about a planet in the war.</p> ATTRIBUTE DESCRIPTION <code>index</code> <p>Planet index number.</p> <p> TYPE: <code>int</code> </p> <code>name</code> <p>Planet name.</p> <p> TYPE: <code>str</code> </p> <code>sector</code> <p>Galactic sector location.</p> <p> TYPE: <code>str</code> </p> <code>biome</code> <p>Planet's biome characteristics.</p> <p> TYPE: <code>Biome</code> </p> <code>hazards</code> <p>Environmental hazards.</p> <p> TYPE: <code>list[PlanetaryHazard]</code> </p> <code>hash</code> <p>Unique planet identifier.</p> <p> TYPE: <code>int</code> </p> <code>position</code> <p>Galactic coordinates.</p> <p> TYPE: <code>Position</code> </p> <code>waypoints</code> <p>Planetary waypoints.</p> <p> TYPE: <code>list[int]</code> </p> <code>max_health</code> <p>Maximum planetary health.</p> <p> TYPE: <code>int</code> </p> <code>health</code> <p>Current planetary health.</p> <p> TYPE: <code>int</code> </p> <code>disabled</code> <p>Planet accessibility status.</p> <p> TYPE: <code>bool</code> </p> <code>initial_owner</code> <p>Original controlling faction.</p> <p> TYPE: <code>FactionType</code> </p> <code>current_owner</code> <p>Current controlling faction.</p> <p> TYPE: <code>FactionType</code> </p> <code>regen_per_second</code> <p>Health regeneration rate.</p> <p> TYPE: <code>float</code> </p> <code>event</code> <p>Current planetary event.</p> <p> TYPE: <code>PlanetEvent | None</code> </p> <code>statistics</code> <p>Planet-specific statistics.</p> <p> TYPE: <code>Statistics</code> </p> <code>attacking</code> <p>Attacking force identifiers.</p> <p> TYPE: <code>list[int]</code> </p>"},{"location":"api/models/#helldivepy.models.Planet-attributes","title":"Attributes","text":""},{"location":"api/models/#helldivepy.models.Planet.index","title":"helldivepy.models.Planet.index  <code>instance-attribute</code>","text":"<pre><code>index: int\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet.name","title":"helldivepy.models.Planet.name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet.sector","title":"helldivepy.models.Planet.sector  <code>instance-attribute</code>","text":"<pre><code>sector: str\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet.biome","title":"helldivepy.models.Planet.biome  <code>instance-attribute</code>","text":"<pre><code>biome: Biome\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet.hazards","title":"helldivepy.models.Planet.hazards  <code>instance-attribute</code>","text":"<pre><code>hazards: list[PlanetaryHazard]\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet.hash","title":"helldivepy.models.Planet.hash  <code>instance-attribute</code>","text":"<pre><code>hash: int\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet.position","title":"helldivepy.models.Planet.position  <code>instance-attribute</code>","text":"<pre><code>position: Position\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet.waypoints","title":"helldivepy.models.Planet.waypoints  <code>instance-attribute</code>","text":"<pre><code>waypoints: list[int]\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet.max_health","title":"helldivepy.models.Planet.max_health  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>max_health: int = Field(alias='maxHealth')\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet.health","title":"helldivepy.models.Planet.health  <code>instance-attribute</code>","text":"<pre><code>health: int\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet.disabled","title":"helldivepy.models.Planet.disabled  <code>instance-attribute</code>","text":"<pre><code>disabled: bool\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet.initial_owner","title":"helldivepy.models.Planet.initial_owner  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>initial_owner: FactionType = Field(alias='initialOwner')\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet.current_owner","title":"helldivepy.models.Planet.current_owner  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>current_owner: FactionType = Field(alias='currentOwner')\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet.regen_per_second","title":"helldivepy.models.Planet.regen_per_second  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>regen_per_second: float = Field(alias='regenPerSecond')\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet.event","title":"helldivepy.models.Planet.event  <code>instance-attribute</code>","text":"<pre><code>event: PlanetEvent | None\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet.statistics","title":"helldivepy.models.Planet.statistics  <code>instance-attribute</code>","text":"<pre><code>statistics: Statistics\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet.attacking","title":"helldivepy.models.Planet.attacking  <code>instance-attribute</code>","text":"<pre><code>attacking: list[int]\n</code></pre>"},{"location":"api/models/#helldivepy.models.Planet.has_space_station","title":"helldivepy.models.Planet.has_space_station  <code>property</code>","text":"<pre><code>has_space_station: bool\n</code></pre> <p>Checks for presence of an orbital space station.</p> RETURNS DESCRIPTION <code>bool</code> <p>True if a space station is present, False otherwise.</p> <p> TYPE: <code>bool</code> </p> RAISES DESCRIPTION <code>RuntimeError</code> <p>If ApiClient is not properly initialized.</p>"},{"location":"api/models/#helldivepy.models.AssignmentTaskData","title":"helldivepy.models.AssignmentTaskData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Assignment task specific data.</p> <p>Contains details about objectives for an assignment task.</p> ATTRIBUTE DESCRIPTION <code>liberate</code> <p>Planet liberation objective flag.</p> <p> TYPE: <code>bool | None</code> </p> <code>planet</code> <p>Target planet for assignment.</p> <p> TYPE: <code>Planet | None</code> </p> <code>target_count</code> <p>Required objective count.</p> <p> TYPE: <code>int | None</code> </p> <code>race</code> <p>Target faction type.</p> <p> TYPE: <code>FactionType | None</code> </p>"},{"location":"api/models/#helldivepy.models.AssignmentTaskData-attributes","title":"Attributes","text":""},{"location":"api/models/#helldivepy.models.AssignmentTaskData.liberate","title":"helldivepy.models.AssignmentTaskData.liberate  <code>instance-attribute</code>","text":"<pre><code>liberate: bool | None\n</code></pre>"},{"location":"api/models/#helldivepy.models.AssignmentTaskData.planet","title":"helldivepy.models.AssignmentTaskData.planet  <code>instance-attribute</code>","text":"<pre><code>planet: Planet | None\n</code></pre>"},{"location":"api/models/#helldivepy.models.AssignmentTaskData.target_count","title":"helldivepy.models.AssignmentTaskData.target_count  <code>instance-attribute</code>","text":"<pre><code>target_count: int | None\n</code></pre>"},{"location":"api/models/#helldivepy.models.AssignmentTaskData.race","title":"helldivepy.models.AssignmentTaskData.race  <code>instance-attribute</code>","text":"<pre><code>race: FactionType | None\n</code></pre>"},{"location":"api/models/#helldivepy.models.AssignmentTask","title":"helldivepy.models.AssignmentTask","text":"<p>               Bases: <code>BaseModel</code></p> <p>Individual assignment task details.</p> <p>Represents a single task within an assignment.</p> ATTRIBUTE DESCRIPTION <code>type</code> <p>Task type classification.</p> <p> TYPE: <code>AssignmentTypes</code> </p> <code>values</code> <p>Task-specific values.</p> <p> TYPE: <code>list[int]</code> </p> <code>value_types</code> <p>Types of provided values.</p> <p> TYPE: <code>list[ValueTypes]</code> </p> <code>data</code> <p>Associated task data.</p> <p> TYPE: <code>AssignmentTaskData</code> </p>"},{"location":"api/models/#helldivepy.models.AssignmentTask-attributes","title":"Attributes","text":""},{"location":"api/models/#helldivepy.models.AssignmentTask.type","title":"helldivepy.models.AssignmentTask.type  <code>instance-attribute</code>","text":"<pre><code>type: AssignmentTypes\n</code></pre>"},{"location":"api/models/#helldivepy.models.AssignmentTask.values","title":"helldivepy.models.AssignmentTask.values  <code>instance-attribute</code>","text":"<pre><code>values: list[int]\n</code></pre>"},{"location":"api/models/#helldivepy.models.AssignmentTask.value_types","title":"helldivepy.models.AssignmentTask.value_types  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>value_types: list[ValueTypes] = Field(alias='valueTypes')\n</code></pre>"},{"location":"api/models/#helldivepy.models.AssignmentTask.data","title":"helldivepy.models.AssignmentTask.data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>data: AssignmentTaskData = AssignmentTaskData(liberate=None, planet=None, target_count=None, race=None)\n</code></pre>"},{"location":"api/models/#helldivepy.models.AssignmentTask-functions","title":"Functions","text":""},{"location":"api/models/#helldivepy.models.AssignmentTask.model_post_init","title":"helldivepy.models.AssignmentTask.model_post_init","text":"<pre><code>model_post_init(__context: Any) -&gt; None\n</code></pre> <p>Initializes task data after model creation.</p> PARAMETER DESCRIPTION <code>__context</code> <p>Initialization context data.</p> <p> TYPE: <code>Any</code> </p> RAISES DESCRIPTION <code>ValueError</code> <p>If ApiClient is not properly initialized.</p>"},{"location":"api/models/#helldivepy.models.AssignmentReward","title":"helldivepy.models.AssignmentReward","text":"<p>               Bases: <code>BaseModel</code></p> <p>Assignment completion reward.</p> <p>Details about rewards given for completing an assignment.</p> ATTRIBUTE DESCRIPTION <code>type</code> <p>Reward type identifier.</p> <p> TYPE: <code>int</code> </p> <code>amount</code> <p>Reward quantity.</p> <p> TYPE: <code>int</code> </p>"},{"location":"api/models/#helldivepy.models.AssignmentReward-attributes","title":"Attributes","text":""},{"location":"api/models/#helldivepy.models.AssignmentReward.type","title":"helldivepy.models.AssignmentReward.type  <code>instance-attribute</code>","text":"<pre><code>type: int\n</code></pre>"},{"location":"api/models/#helldivepy.models.AssignmentReward.amount","title":"helldivepy.models.AssignmentReward.amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"api/models/#helldivepy.models.Assignment","title":"helldivepy.models.Assignment","text":"<p>               Bases: <code>BaseModel</code></p> <p>Major Order assignment information.</p> <p>Contains complete information about a mission assignment.</p> ATTRIBUTE DESCRIPTION <code>id</code> <p>Unique assignment identifier.</p> <p> TYPE: <code>int</code> </p> <code>progress</code> <p>Task completion progress.</p> <p> TYPE: <code>list[int]</code> </p> <code>title</code> <p>Assignment title.</p> <p> TYPE: <code>str | None</code> </p> <code>briefing</code> <p>Mission briefing text.</p> <p> TYPE: <code>str | None</code> </p> <code>description</code> <p>Detailed assignment description.</p> <p> TYPE: <code>str | None</code> </p> <code>tasks</code> <p>Required tasks.</p> <p> TYPE: <code>list[AssignmentTask]</code> </p> <code>reward</code> <p>Completion reward.</p> <p> TYPE: <code>AssignmentReward</code> </p> <code>expiration</code> <p>Assignment expiration time.</p> <p> TYPE: <code>datetime</code> </p>"},{"location":"api/models/#helldivepy.models.Assignment-attributes","title":"Attributes","text":""},{"location":"api/models/#helldivepy.models.Assignment.id","title":"helldivepy.models.Assignment.id  <code>instance-attribute</code>","text":"<pre><code>id: int\n</code></pre>"},{"location":"api/models/#helldivepy.models.Assignment.progress","title":"helldivepy.models.Assignment.progress  <code>instance-attribute</code>","text":"<pre><code>progress: list[int]\n</code></pre>"},{"location":"api/models/#helldivepy.models.Assignment.title","title":"helldivepy.models.Assignment.title  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>title: str | None = None\n</code></pre>"},{"location":"api/models/#helldivepy.models.Assignment.briefing","title":"helldivepy.models.Assignment.briefing  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>briefing: str | None = None\n</code></pre>"},{"location":"api/models/#helldivepy.models.Assignment.description","title":"helldivepy.models.Assignment.description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: str | None = None\n</code></pre>"},{"location":"api/models/#helldivepy.models.Assignment.tasks","title":"helldivepy.models.Assignment.tasks  <code>instance-attribute</code>","text":"<pre><code>tasks: list[AssignmentTask]\n</code></pre>"},{"location":"api/models/#helldivepy.models.Assignment.reward","title":"helldivepy.models.Assignment.reward  <code>instance-attribute</code>","text":"<pre><code>reward: AssignmentReward\n</code></pre>"},{"location":"api/models/#helldivepy.models.Assignment.expiration","title":"helldivepy.models.Assignment.expiration  <code>instance-attribute</code>","text":"<pre><code>expiration: datetime\n</code></pre>"},{"location":"api/models/#helldivepy.models.Assignment.is_complete","title":"helldivepy.models.Assignment.is_complete  <code>property</code>","text":"<pre><code>is_complete: bool\n</code></pre> <p>Checks if all assignment tasks are complete.</p> RETURNS DESCRIPTION <code>bool</code> <p>True if all tasks meet their target count, False otherwise.</p> <p> TYPE: <code>bool</code> </p>"},{"location":"api/models/#helldivepy.models.Campaign","title":"helldivepy.models.Campaign","text":"<p>               Bases: <code>BaseModel</code></p> <p>Campaign battle information.</p> <p>Contains details about a specific war campaign.</p> ATTRIBUTE DESCRIPTION <code>id</code> <p>Unique campaign identifier.</p> <p> TYPE: <code>int</code> </p> <code>planet</code> <p>Campaign target planet.</p> <p> TYPE: <code>Planet</code> </p> <code>type</code> <p>Campaign classification.</p> <p> TYPE: <code>int</code> </p> <code>count</code> <p>Number of battles in campaign.</p> <p> TYPE: <code>int</code> </p>"},{"location":"api/models/#helldivepy.models.Campaign-attributes","title":"Attributes","text":""},{"location":"api/models/#helldivepy.models.Campaign.id","title":"helldivepy.models.Campaign.id  <code>instance-attribute</code>","text":"<pre><code>id: int\n</code></pre>"},{"location":"api/models/#helldivepy.models.Campaign.planet","title":"helldivepy.models.Campaign.planet  <code>instance-attribute</code>","text":"<pre><code>planet: Planet\n</code></pre>"},{"location":"api/models/#helldivepy.models.Campaign.type","title":"helldivepy.models.Campaign.type  <code>instance-attribute</code>","text":"<pre><code>type: CampaignTypes\n</code></pre>"},{"location":"api/models/#helldivepy.models.Campaign.count","title":"helldivepy.models.Campaign.count  <code>instance-attribute</code>","text":"<pre><code>count: int\n</code></pre>"},{"location":"api/models/#helldivepy.models.SpaceStation","title":"helldivepy.models.SpaceStation","text":"<p>               Bases: <code>BaseModel</code></p> <p>Orbital space station information.</p> <p>Contains details about a planetary space station.</p> ATTRIBUTE DESCRIPTION <code>id</code> <p>Unique station identifier.</p> <p> TYPE: <code>int</code> </p> <code>planet</code> <p>Host planet.</p> <p> TYPE: <code>Planet</code> </p> <code>election_end</code> <p>Station election period end time.</p> <p> TYPE: <code>datetime</code> </p> <code>flags</code> <p>Station status flags.</p> <p> TYPE: <code>int</code> </p>"},{"location":"api/models/#helldivepy.models.SpaceStation-attributes","title":"Attributes","text":""},{"location":"api/models/#helldivepy.models.SpaceStation.id","title":"helldivepy.models.SpaceStation.id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: int = Field(alias='id32')\n</code></pre>"},{"location":"api/models/#helldivepy.models.SpaceStation.planet","title":"helldivepy.models.SpaceStation.planet  <code>instance-attribute</code>","text":"<pre><code>planet: Planet\n</code></pre>"},{"location":"api/models/#helldivepy.models.SpaceStation.election_end","title":"helldivepy.models.SpaceStation.election_end  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>election_end: datetime = Field(alias='electionEnd')\n</code></pre>"},{"location":"api/models/#helldivepy.models.SpaceStation.flags","title":"helldivepy.models.SpaceStation.flags  <code>instance-attribute</code>","text":"<pre><code>flags: int\n</code></pre>"},{"location":"api/routes/","title":"Routes","text":""},{"location":"api/routes/#helldivepy.api","title":"helldivepy.api","text":""},{"location":"api/routes/#helldivepy.api-attributes","title":"Attributes","text":""},{"location":"api/routes/#helldivepy.api.__all__","title":"helldivepy.api.__all__  <code>module-attribute</code>","text":"<pre><code>__all__ = ['DispatchModule', 'WarModule', 'SteamModule', 'AssignmentsModule', 'PlanetsModule', 'CampaignModule', 'SpaceStationModule']\n</code></pre>"},{"location":"api/routes/#helldivepy.api-classes","title":"Classes","text":""},{"location":"api/routes/#helldivepy.api.DispatchModule","title":"helldivepy.api.DispatchModule","text":"<pre><code>DispatchModule(api_client: ApiClient)\n</code></pre> <p>               Bases: <code>BaseApiModule</code></p> <p>The Dispatch API module. This module is used to interact with all dispatches (Ingame News)</p> METHOD DESCRIPTION <code>get_dispatches</code> <p>bool): Gets all dispatches and orders them based on the <code>old_to_new</code> argument.</p> <code>get_dispatch</code> <p>int): Gets a dispatch by its ID.</p>"},{"location":"api/routes/#helldivepy.api.DispatchModule-functions","title":"Functions","text":""},{"location":"api/routes/#helldivepy.api.DispatchModule.get_dispatches","title":"helldivepy.api.DispatchModule.get_dispatches","text":"<pre><code>get_dispatches(old_to_new: bool = True) -&gt; typing.List[models.Dispatch]\n</code></pre> <p>Gets the information about the current war.</p>"},{"location":"api/routes/#helldivepy.api.DispatchModule.get_dispatch","title":"helldivepy.api.DispatchModule.get_dispatch","text":"<pre><code>get_dispatch(dispatch_id: int) -&gt; models.Dispatch\n</code></pre> <p>Gets the information about the current war.</p>"},{"location":"api/routes/#helldivepy.api.WarModule","title":"helldivepy.api.WarModule","text":"<pre><code>WarModule(api_client: ApiClient)\n</code></pre> <p>               Bases: <code>BaseApiModule</code></p> <p>The War module of the API. This module is used to get all info about the current war.</p> METHOD DESCRIPTION <code>get_war_info</code> <p>Gets the information about the current war.</p>"},{"location":"api/routes/#helldivepy.api.WarModule-functions","title":"Functions","text":""},{"location":"api/routes/#helldivepy.api.WarModule.get_war_info","title":"helldivepy.api.WarModule.get_war_info","text":"<pre><code>get_war_info() -&gt; models.WarInfo\n</code></pre> <p>Gets the information about the current war.</p>"},{"location":"api/routes/#helldivepy.api.SteamModule","title":"helldivepy.api.SteamModule","text":"<pre><code>SteamModule(api_client: ApiClient)\n</code></pre> <p>               Bases: <code>BaseApiModule</code></p> <p>The Steam API module. Used to get all the Game updates and News.</p> METHOD DESCRIPTION <code>get_all_steam_news</code> <p>Gets all the steam news.</p> <code>get_steam_news</code> <p>str): Gets a steam news item by its ID.</p>"},{"location":"api/routes/#helldivepy.api.SteamModule-functions","title":"Functions","text":""},{"location":"api/routes/#helldivepy.api.SteamModule.get_all_steam_news","title":"helldivepy.api.SteamModule.get_all_steam_news","text":"<pre><code>get_all_steam_news() -&gt; typing.List[models.SteamNews]\n</code></pre> <p>Gets the information about the current war.</p>"},{"location":"api/routes/#helldivepy.api.SteamModule.get_steam_news","title":"helldivepy.api.SteamModule.get_steam_news","text":"<pre><code>get_steam_news(gid: str) -&gt; models.SteamNews\n</code></pre> <p>Gets the information about the current war.</p>"},{"location":"api/routes/#helldivepy.api.AssignmentsModule","title":"helldivepy.api.AssignmentsModule","text":"<pre><code>AssignmentsModule(api_client: ApiClient)\n</code></pre> <p>               Bases: <code>BaseApiModule</code></p> <p>The Assignments API module (Major Order). This module is used to interact with the current major order(s).</p> METHOD DESCRIPTION <code>get_all_assignments</code> <p>Gets all current assignments</p> <code>get_assignment</code> <p>int): Gets one assignment using the assignment ID</p>"},{"location":"api/routes/#helldivepy.api.AssignmentsModule-functions","title":"Functions","text":""},{"location":"api/routes/#helldivepy.api.AssignmentsModule.get_all_assignments","title":"helldivepy.api.AssignmentsModule.get_all_assignments","text":"<pre><code>get_all_assignments() -&gt; typing.List[models.Assignment]\n</code></pre> <p>Gets all current assignments</p>"},{"location":"api/routes/#helldivepy.api.AssignmentsModule.get_assignment","title":"helldivepy.api.AssignmentsModule.get_assignment","text":"<pre><code>get_assignment(assignment_id: int) -&gt; models.Assignment\n</code></pre> <p>Gets one assignment using the assignment ID</p>"},{"location":"api/routes/#helldivepy.api.PlanetsModule","title":"helldivepy.api.PlanetsModule","text":"<pre><code>PlanetsModule(api_client: ApiClient)\n</code></pre> <p>               Bases: <code>BaseApiModule</code></p> <p>The Planets API module. This module is used to interact with the planets.</p> METHOD DESCRIPTION <code>get_planets</code> <p>Gets all planets.</p> <code>get_planet</code> <p>int): Gets a planet using the index.</p> <code>get_planets_with_events</code> <p>Gets all planets with events.</p>"},{"location":"api/routes/#helldivepy.api.PlanetsModule-functions","title":"Functions","text":""},{"location":"api/routes/#helldivepy.api.PlanetsModule.get_planets","title":"helldivepy.api.PlanetsModule.get_planets","text":"<pre><code>get_planets() -&gt; typing.List[models.Planet]\n</code></pre> <p>Get all planets</p> RETURNS DESCRIPTION <code>List[Planet]</code> <p>typing.List[models.Planet]: The list of planet objects</p>"},{"location":"api/routes/#helldivepy.api.PlanetsModule.get_planet","title":"helldivepy.api.PlanetsModule.get_planet","text":"<pre><code>get_planet(index: int, cached: bool = False) -&gt; models.Planet\n</code></pre> <p>Gets a planet using the index</p> PARAMETER DESCRIPTION <code>index</code> <p>The index of the planet</p> <p> TYPE: <code>int</code> </p> RETURNS DESCRIPTION <code>Planet</code> <p>models.Planet: The planet object</p>"},{"location":"api/routes/#helldivepy.api.PlanetsModule.get_planets_with_events","title":"helldivepy.api.PlanetsModule.get_planets_with_events","text":"<pre><code>get_planets_with_events() -&gt; typing.List[models.Planet]\n</code></pre> <p>Gets all planets with an active event</p> RETURNS DESCRIPTION <code>List[Planet]</code> <p>typing.List[models.Planet]: The list of planet objects</p>"},{"location":"api/routes/#helldivepy.api.CampaignModule","title":"helldivepy.api.CampaignModule","text":"<pre><code>CampaignModule(api_client: ApiClient)\n</code></pre> <p>               Bases: <code>BaseApiModule</code></p> <p>The Campaign API module. This module is used to interact with all campaigns (Battles/Planets that are accessible).</p> METHOD DESCRIPTION <code>get_campaigns</code> <p>Gets all current active campaigns.</p> <code>get_campaign</code> <p>int): Gets a campaign by its ID.</p>"},{"location":"api/routes/#helldivepy.api.CampaignModule-functions","title":"Functions","text":""},{"location":"api/routes/#helldivepy.api.CampaignModule.get_campaigns","title":"helldivepy.api.CampaignModule.get_campaigns","text":"<pre><code>get_campaigns() -&gt; typing.List[models.Campaign]\n</code></pre> <p>Gets all current active campaigns.</p> RETURNS DESCRIPTION <code>List[Campaign]</code> <p>typing.List[models.Campaign]: The campaigns.</p>"},{"location":"api/routes/#helldivepy.api.CampaignModule.get_campaign","title":"helldivepy.api.CampaignModule.get_campaign","text":"<pre><code>get_campaign(campaign_id: int) -&gt; models.Campaign\n</code></pre> <p>Gets a campaign by its ID.</p> PARAMETER DESCRIPTION <code>campaign_id</code> <p>The ID of the campaign.</p> <p> TYPE: <code>int</code> </p> RETURNS DESCRIPTION <code>Campaign</code> <p>models.Campaign: The campaign.</p>"},{"location":"api/routes/#helldivepy.api.SpaceStationModule","title":"helldivepy.api.SpaceStationModule","text":"<pre><code>SpaceStationModule(api_client: ApiClient)\n</code></pre> <p>               Bases: <code>BaseApiModule</code></p>"},{"location":"api/routes/#helldivepy.api.SpaceStationModule-functions","title":"Functions","text":""},{"location":"api/routes/#helldivepy.api.SpaceStationModule.get_space_stations","title":"helldivepy.api.SpaceStationModule.get_space_stations","text":"<pre><code>get_space_stations() -&gt; list[models.SpaceStation]\n</code></pre> <p>Retrieves all space stations.</p> RETURNS DESCRIPTION <code>list[SpaceStation]</code> <p>list[SpaceStation]: A list of space station objects from the server.</p>"},{"location":"api/routes/#helldivepy.api.SpaceStationModule.get_space_station","title":"helldivepy.api.SpaceStationModule.get_space_station","text":"<pre><code>get_space_station(index: int) -&gt; Optional[models.SpaceStation]\n</code></pre> <p>Retrieves a space station by its ID.</p> PARAMETER DESCRIPTION <code>index</code> <p>The ID of the space station.</p> <p> TYPE: <code>int</code> </p> RETURNS DESCRIPTION <code>Optional[SpaceStation]</code> <p>Optional[SpaceStation]: The space station object if found, or None.</p>"},{"location":"api/utils/","title":"Utils","text":""},{"location":"api/utils/#helldivepy.utils","title":"helldivepy.utils","text":""},{"location":"api/utils/#helldivepy.utils-attributes","title":"Attributes","text":""},{"location":"api/utils/#helldivepy.utils.FACTIONS","title":"helldivepy.utils.FACTIONS  <code>module-attribute</code>","text":"<pre><code>FACTIONS = {1: 'Humans', 2: 'Terminids', 3: 'Automaton', 4: 'Illuminate'}\n</code></pre>"},{"location":"api/utils/#helldivepy.utils-classes","title":"Classes","text":""},{"location":"api/utils/#helldivepy.utils.DiveHarderException","title":"helldivepy.utils.DiveHarderException","text":"<p>               Bases: <code>Exception</code></p> <p>Base exception for all DiveHarder exceptions.</p>"},{"location":"api/utils/#helldivepy.utils.DiveHarderAPIConnectionError","title":"helldivepy.utils.DiveHarderAPIConnectionError","text":"<p>               Bases: <code>DiveHarderException</code></p> <p>Exception raised when the DiveHarder API connection fails.</p>"},{"location":"api/utils/#helldivepy.utils-functions","title":"Functions","text":""},{"location":"api/utils/#helldivepy.utils.hdml_to_md","title":"helldivepy.utils.hdml_to_md","text":"<pre><code>hdml_to_md(text: str) -&gt; str\n</code></pre> <p>Converts a string in HDML (DiveHarder Markup Language) format to Markdown format.</p> PARAMETER DESCRIPTION <code>text</code> <p>The input string in HDML format.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>str</code> <p>The input string converted to Markdown format.</p> <p> TYPE: <code>str</code> </p>"},{"location":"api/utils/#helldivepy.utils.url_join","title":"helldivepy.utils.url_join","text":"<pre><code>url_join(*args)\n</code></pre> <p>Join combine URL parts to get the full endpoint address.</p>"},{"location":"api/utils/#helldivepy.utils.parse_faction","title":"helldivepy.utils.parse_faction","text":"<pre><code>parse_faction(faction: int) -&gt; enums.FactionType | None\n</code></pre> <p>Parse faction ID to string</p> PARAMETER DESCRIPTION <code>faction</code> <p>The faction ID</p> <p> TYPE: <code>int</code> </p> RETURNS DESCRIPTION <code>str</code> <p>The faction name</p> <p> TYPE: <code>FactionType | None</code> </p>"}]}